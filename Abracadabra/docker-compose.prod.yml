version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: domli-postgres-prod
    environment:
      POSTGRES_DB: ${DB_NAME:-domli_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - domli-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: domli-backend-prod
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-domli_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      PORT: 3000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - domli-network
    restart: unless-stopped

  # Frontend (Production Build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: domli-frontend-prod
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000/api}
    ports:
      - "4173:80"
    depends_on:
      - backend
    networks:
      - domli-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: domli-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - domli-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  domli-network:
    driver: bridge 